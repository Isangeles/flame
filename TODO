MAJOR:
* Item materials
* Container items
* Extend crafting struct to be something more than mere recipes container(proficiency points, etc.)
* Documentation for data files: armors, skills, areas, objects, quests, recipes, effects, savegame
* Documentation for directories: data, savegames, area, areas, area
* Ability to place items on the ground
* AOE effects
* Character visibility effect(for stealth skill, etc.)
* Currently, the kill requirement is checked against all of the character kill records,
  this is a problem while creating a quest that requires to kill something after accepting the
  quest(kill records could already be present and the quest stage will be completed immediately)
* Better currency req charging strategy(currently it takes all currency items to satisfy the requirement
  even if value of the item exceeds the required value)
* Character dialogs should be progressed separately for each unique object starting a dialog, to allow
  parallel use of dialogs
MINOR:
* More examples
* Improve combat system(include resilience, stats bonuses, etc.)
* Critical hits
* Rename quest.Journal to QuestLog(quest.Log?), journal could be something else
* Tests for data package
* Use action for armors and weapons
* Apply function for UseAction struct
* Appearance struct for game character
* Movement speed modifier
* Items weight and inventory capacity based on total weight of the items
* Remove json module flag for full switch to json data files
DONE:
* Generating unique serial values for game objects
* Functions for importing/exporting module
* Game characters inventory and equipment
* Weapons, armors & misc items
* Effects & modifiers
* Skills
* Game objects
* Player-NPC interaction
* Dialogs system
* Flags for objects
* Quests system
* Module and chapter structs
* Areas
* Crafting system
* Trainers
* Custom races for game characters
* Requirements
* Use action
* In-game time
* Area weather
* Area respawn
* Switching chapters