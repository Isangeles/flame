MAJOR:
* Switching chapters
* Item materials
* Useable items
* Container items
* Extend crafting struct to be something more than mere recipes container(proficiency points, etc.)
* Documentation for XML data files: armors, skills, areas, objects, quests, recipes, effects, savegame
* Documentation for directories: data, savegames, area, areas, area
* Switch to JSON format for data files
* Respawning area mobs
* Ability to place items on the ground
* Kill requirement(figure out how to track killed characters/objects, etc.)
* Effects for custom races
* AOE effects
* Character visibility effect(for stealth skill, etc.)
MINOR:
* More examples
* Improve combat system(include resilience, stats bonuses, etc.)
* Improve NPC AI(selecting skills proper to situation)
* Refactor chapter's SetOnAreaAddedFunc to AddOnAreaAddedFunc, i.e. adding event functions,
  not just handling and overriding one function
* Use sync.Map to store area objects(and subareas?)
* Exporting character exports also quests, effects, items, etc., its desirable for save game,
  but other marshaling method should be applied for exporting character to use in different game
* Rename quest.Journal to QuestLog(quest.Log?), journal could be something else
* Tests for parsexml and data packages
* Camelcase names for consts in: quest
* Remove stage modifiers from dialog, modifiers should be passed only through
  stage answers
* XML: rename talker node in dialog to target
* Item modifier
* Area weather
* In-game time
DONE:
* Generating unique serial values for game objects
* Save/load game mechanism
* Game characters inventory and equipment
* Weapons, armors & misc items
* Effects & modifiers
* Skills
* Game objects
* NPC AI
* Player-NPC interaction
* Dialogs system
* Flags for objects
* Quests system
* Module, chapters, scenarios
* Crafting system
* NPC trainers
* Changing areas
* Custom races for game characters