MAJOR:
* Switching chapters
* Item materials
* Container items
* Extend crafting struct to be something more than mere recipes container(proficiency points, etc.)
* Documentation for XML data files: armors, skills, areas, objects, quests, recipes, effects, savegame
* Documentation for directories: data, savegames, area, areas, area
* Switch to JSON format for data files
* Ability to place items on the ground
* AOE effects
* Character visibility effect(for stealth skill, etc.)
* Currently, the kill requirement is checked against all of the character kill records,
  this is a problem while creating a quest that requires to kill something after accepting the
  quest(kill records could already be present and the quest stage will be completed immediately)
* Remove object.Object struct, all area objects can be characters
MINOR:
* More examples
* Improve combat system(include resilience, stats bonuses, etc.)
* Critical hits
* Refactor chapter's SetOnAreaAddedFunc to AddOnAreaAddedFunc, i.e. adding event functions,
  not just handling and overriding one function
* Rename quest.Journal to QuestLog(quest.Log?), journal could be something else
* Tests for data package
* Use action for armors and weapons
* Character: remove currency items in ChargeReq function
* Apply function for UseAction struct
* Appearance struct for game character
* Movement speed modifier
* Handling requirements for area objects
* Handling area objects in chapter updateObjectsArea function
DONE:
* Generating unique serial values for game objects
* Functions for importing/exporting module
* Game characters inventory and equipment
* Weapons, armors & misc items
* Effects & modifiers
* Skills
* Game objects
* Player-NPC interaction
* Dialogs system
* Flags for objects
* Quests system
* Module and chapter structs
* Areas
* Crafting system
* Trainers
* Custom races for game characters
* Requirements
* Use action
* In-game time
* Area weather
* Area respawn